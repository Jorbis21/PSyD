#include <s3c44b0x.h>
#include <s3cev40.h>
#include <rtc.h>

extern void isr_TICK_dummy( void );

void rtc_init( void )
{
    TICNT   = 0x0;
    RTCALM  = 0x0;
    RTCRST  = 0x0;
        
    RTCCON  = 0x1;
    
    BCDYEAR = 0xd;
    BCDMON  = 0x1;
    BCDDAY  = 0x1;
    BCDDATE = 0x2;
    BCDHOUR = 0x0;
    BCDMIN  = 0x0;
    BCDSEC  = 0x0;

    ALMYEAR = 0x0;
    ALMMON  = 0x0;
    ALMDAY  = 0x0;
    ALMHOUR = 0x0;
    ALMMIN  = 0x0;
    ALMSEC  = 0x0;

    RTCCON &= (0 << 1);//revisar todos los que tengan esto que soy un cazurro
}

void rtc_puttime( rtc_time_t *rtc_time )
{
    RTCCON |= (1 << 1);
    
    BCDYEAR = rtc_time->year;
    BCDMON  = rtc_time->mon;
    BCDDAY  = rtc_time->mday;
    BCDDATE = rtc_time->wday;
    BCDHOUR = rtc_time->hour;
    BCDMIN  = rtc_time->min;
    BCDSEC  = rtc_time->sec;
        
    RTCCON &= (0 << 1);
}

void rtc_gettime( rtc_time_t *rtc_time )
{
    RTCCON |= (1 << 1);
    
    rtc_time->year = BCDYEAR;
    rtc_time->mon  = BCDMON;
    rtc_time->mday = BCDDAY;
    rtc_time->wday = BCDDATE;
    rtc_time->hour = BCDHOUR;
    rtc_time->min  = BCDMIN;
    rtc_time->sec  = BCDSEC;
    if( ! rtc_time->sec ){
        rtc_time->year = BCDYEAR;
        rtc_time->mon  = BCDMON;
        rtc_time->mday = BCDDAY;
        rtc_time->wday = BCDDATE;
        rtc_time->hour = BCDHOUR;
        rtc_time->min  = BCDMIN;
        rtc_time->sec  = BCDSEC;
    };

    RTCCON &= (0 << 1);
}


void rtc_open( void (*isr)(void), uint8 tick_count )
{
    pISR_TICK = isr;
    I_ISPC    = 1<<2;//1
    INTMSK   &= 0<<27;//26
    TICNT     = 0xff;
}

void rtc_close( void )
{
    TICNT     = 0x0;
    INTMSK   |= ...;    
    pISR_TICK = (uint32) isr_TICK_dummy;;
}
